{"version":3,"sources":["components/car/CarModel.js","resources/hdr/hdr.hdr","components/carModelCanvas/CarModelCanvas.js","actions/index.js","components/changeCar/ChangeCar.js","components/carOptions/Color.js","components/carOptions/Engine.js","components/carOptions/Gearbox.js","components/carOptions/CarOptions.js","components/configurationSummary/ConfigurationSummary.js","components/carCustomizationContainer/CarCustomizationContainer.js","App.js","reportWebVitals.js","reducers/changeCar.js","reducers/selectCarColor.js","reducers/selectCarEngine.js","reducers/changeCarGearbox.js","reducers/index.js","index.js"],"names":["CarModel","props","group","useRef","currentCar","useSelector","state","changeCarReducer","currentColor","selectCarColorReducer","useGLTF","id","nodes","materials","console","log","undefined","ref","dispose","position","geometry","elements_1","material","decors","elements_2","body","material-color","hexValue","CarModelCanvas","Consumer","store","camera","fov","intensity","fallback","Environment","files","HdrFile","OrbitControls","minPolarAngle","Math","PI","maxPolarAngle","enableZoom","enablePan","selectCar","carId","type","payload","selectCarColor","color","selectCarEngine","engine","selectCarGearbox","gearbox","ChangeCar","dispatch","useDispatch","useState","carModels","setCarModels","useEffect","getCarModels","a","request","default","response","changeCar","e","target","dataset","filter","value","parseInt","className","map","onClick","style","boxShadow","data-id","carModel","model","Color","avaiableConfiguration","colors","addPrice","changeColor","clickedColor","colorid","backgroundColor","transform","data-colorid","opacity","Engine","currentEngine","selectCarEngineReducer","engines","changeEngine","clickedEngine","data-engine","Gearbox","currentGearbox","selectCarGearboxReducer","defaultGearbox","useCallback","onlyAutomaticGearbox","gearboxType","changeGearbox","clickedGearbox","data-gearbox","CarOptions","ConfigurationSummary","price","setPrice","basePrice","colorName","toFixed","CarCustomizationContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectCarReducer","action","car","carColor","carEngine","carGearbox","allReducers","combineReducers","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75396463.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\nimport {useSelector} from 'react-redux';\r\nimport { useGLTF} from '@react-three/drei';\r\n\r\nexport const CarModel = (props) => {\r\n    const group = useRef()\r\n    const currentCar = useSelector(state => state.changeCarReducer);\r\n    const currentColor = useSelector(state => state.selectCarColorReducer);\r\n    \r\n    const { nodes, materials } = useGLTF(`/resources/carModels/car${currentCar.id}.gltf`, true);\r\n    console.log(`../../resources/carModels/car${currentCar.id}.gltf`);\r\n    \r\n    if(currentCar.id !== undefined){\r\n    return(\r\n    <group ref={group} {...props} dispose={null} position={[0, -1.1, 0]}>\r\n      <group>\r\n        <mesh geometry={nodes.elements_1.geometry} material={materials.decors} />\r\n        <mesh geometry={nodes.elements_2.geometry} material={materials.body} material-color={currentColor.hexValue}/>\r\n      </group>\r\n    </group>\r\n    )\r\n\r\n  }else{\r\n    return (\r\n      null\r\n    )\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/hdr.a1d22329.hdr\";","import {Suspense} from 'react';\r\nimport { Canvas } from '@react-three/fiber'\r\nimport {CarModel} from '../car/CarModel';\r\nimport { OrbitControls, Environment} from '@react-three/drei'\r\nimport { ReactReduxContext, Provider } from 'react-redux';\r\nimport HdrFile from \"../../resources/hdr/hdr.hdr\";\r\n\r\nexport const CarModelCanvas = ({currentColor}) => {\r\n    \r\n    return(\r\n        <ReactReduxContext.Consumer>\r\n          {({ store }) => (\r\n            <Canvas camera={{ position: [8, 8, 8], fov: 15 }}>\r\n                <Provider store={store}>\r\n                    <spotLight intensity={0.3} position={[5, 20, 20]}/>\r\n                    <Suspense fallback={null}>\r\n                    <CarModel/>\r\n                    <Environment files={HdrFile}/>\r\n                    </Suspense>\r\n                    <OrbitControls minPolarAngle={Math.PI / 2} maxPolarAngle={Math.PI / 2} enableZoom={false} enablePan={false}/>\r\n                </Provider>\r\n            </Canvas>\r\n        )}\r\n        </ReactReduxContext.Consumer>\r\n    )\r\n}","export const selectCar = (carId) => {\r\n    return{\r\n        type: 'SELECTCAR',\r\n        payload: carId\r\n    }\r\n}\r\n\r\nexport const selectCarColor = (color) => {\r\n    return{\r\n        type: 'SELECTCARCOLOR',\r\n        payload: color\r\n    }\r\n}\r\n\r\nexport const selectCarEngine = (engine) => {\r\n    return{\r\n        type: 'SELECTCARENGINE',\r\n        payload: engine\r\n    }\r\n}\r\n\r\nexport const selectCarGearbox = (gearbox) => {\r\n    return{\r\n        type: 'SELECTCARGEARBOX',\r\n        payload: gearbox\r\n    }\r\n}","import {useDispatch, useSelector} from 'react-redux';\r\nimport {selectCar} from '../../actions';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const ChangeCar = () =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const currentCar = useSelector(state => state.changeCarReducer);\r\n    const [carModels, setCarModels] = useState([]);\r\n\r\n    //calls get request on initial render\r\n    useEffect(() => {\r\n        getCarModels();\r\n    },[]);\r\n\r\n    //simulates get request\r\n    const getCarModels = async () => {\r\n        const request = await import('../../json/carConfiguration.json');\r\n        const response = await request.default;\r\n        setCarModels(response);\r\n    }\r\n\r\n    //set first car after initial render\r\n    useEffect(() =>{\r\n        if(carModels[0] !== undefined){\r\n            dispatch(selectCar(carModels[0]));\r\n        }\r\n    },[carModels, dispatch]);\r\n\r\n\r\n    const changeCar = (e) => {\r\n        const carId = e.target.dataset.id;\r\n        dispatch(selectCar(carModels.filter(value => value.id === parseInt(carId) ? true : false)[0])); //finds selected car in carModels array\r\n    }\r\n\r\n    return(\r\n        <div className=\"sliderContainer\">\r\n            <h4>Choose model</h4>\r\n            {carModels === undefined ? null :\r\n                carModels.map(value => {\r\n                    return value === currentCar ?\r\n                    <h3 key={value.id} onClick={changeCar} style={{boxShadow:\"0px 6px 0px -5px rgba(255,255,255,1)\"}}data-id={value.id}>{value.carModel.model}</h3>\r\n                    :\r\n                    <h3 key={value.id} onClick={changeCar} data-id={value.id}>{value.carModel.model}</h3>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import {useSelector, useDispatch} from 'react-redux';\r\nimport {useEffect} from 'react';\r\nimport {selectCarColor} from '../../actions';\r\n\r\nexport const Color = ({currentCar}) => {\r\n\r\n    const currentColor = useSelector(state => state.selectCarColorReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    //set default color after car change / on initial render\r\n    useEffect(() => {\r\n        dispatch(selectCarColor(currentCar.avaiableConfiguration.colors.filter(value => value.addPrice === 0 ? true : false)[0]));\r\n    },[currentCar, dispatch]);\r\n\r\n    //find clicked color\r\n    const changeColor = (e) =>{\r\n        const clickedColor = e.target.dataset.colorid;\r\n        dispatch(selectCarColor(currentCar.avaiableConfiguration.colors.filter(value => value.hexValue === clickedColor ? true : false)[0]));\r\n    }\r\n\r\n    return(\r\n        <div className=\"optionContainer\">\r\n            <h2>Color</h2>\r\n            <div className=\"colorsContainer\">\r\n                {currentCar.avaiableConfiguration.colors.map(value => {\r\n                    return value === currentColor ? \r\n                    <button key={value.hexValue} style={{backgroundColor:value, transform:\"scale(1.2)\"}}></button> \r\n                    : \r\n                    <button key={value.hexValue} onClick={changeColor} data-colorid={value.hexValue} style={{backgroundColor:value.hexValue, opacity:\"0.4\"}}></button>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useSelector, useDispatch} from 'react-redux';\r\nimport {useEffect} from 'react';\r\nimport {selectCarEngine} from '../../actions';\r\n\r\nexport const Engine = ({currentCar}) => {\r\n\r\n    const currentEngine = useSelector(state => state.selectCarEngineReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    //set default engine after car change / on initial render\r\n    useEffect(() => {\r\n        dispatch(selectCarEngine(currentCar.avaiableConfiguration.engines.filter(value => value.addPrice === 0 ? true : false)[0]));\r\n    },[currentCar, dispatch]);\r\n\r\n    //find clicked engine\r\n    const changeEngine = (e) =>{\r\n        const clickedEngine = e.target.dataset.engine;\r\n        dispatch(selectCarEngine(currentCar.avaiableConfiguration.engines.filter(value => value.engine === clickedEngine ? true : false)[0]));\r\n    }\r\n\r\n    return(\r\n        <div className=\"optionContainer\">\r\n            <h2>Engine</h2>\r\n            <div className=\"buttonsContainer\">\r\n                {currentCar.avaiableConfiguration.engines.map(value => {\r\n                    return value === currentEngine ?\r\n                     <button key={value.engine}>{value.engine}</button>\r\n                     :\r\n                     <button key={value.engine} onClick={changeEngine} data-engine={value.engine} style={{opacity:\"0.4\"}}>{value.engine}</button>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useSelector, useDispatch} from 'react-redux';\r\nimport {useEffect, useCallback} from 'react';\r\nimport {selectCarGearbox} from '../../actions';\r\n\r\nexport const Gearbox = ({currentCar}) => {\r\n\r\n    const currentGearbox = useSelector(state => state.selectCarGearboxReducer);\r\n    const currentEngine = useSelector(state => state.selectCarEngineReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    //find default Gearbox - addPrice === 0 if engine is only avaiable with automatic transmission select automatic instead\r\n    const defaultGearbox = useCallback(() => {\r\n        if(currentEngine.onlyAutomaticGearbox){\r\n            return currentCar.avaiableConfiguration.gearbox.filter(value => value.gearboxType === \"automatic\" ? true : false)[0];\r\n        }else{\r\n            return currentCar.avaiableConfiguration.gearbox.filter(value => value.addPrice === 0 ? true : false)[0];\r\n        }\r\n    },[currentCar.avaiableConfiguration.gearbox, currentEngine.onlyAutomaticGearbox]);\r\n\r\n    //set default gearbox after car change / on initial render\r\n    useEffect(() => {\r\n        dispatch(selectCarGearbox(defaultGearbox()));\r\n    },[currentCar, defaultGearbox, dispatch]);\r\n\r\n    //find clicked gearbox\r\n    const changeGearbox = (e) =>{\r\n        const clickedGearbox = e.target.dataset.gearbox;\r\n        dispatch(selectCarGearbox(currentCar.avaiableConfiguration.gearbox.filter(value => value.gearboxType === clickedGearbox ? true : false)[0]));\r\n    }\r\n\r\n    return(\r\n        <div className=\"optionContainer\">\r\n            <h2>Gearbox</h2>\r\n            <div className=\"buttonsContainer\">\r\n                {currentCar.avaiableConfiguration.gearbox.map(value => {\r\n                    if(currentEngine.onlyAutomaticGearbox){\r\n                        return value.gearboxType === \"automatic\" ? <button key={value.gearboxType}>{value.gearboxType}</button> : null;\r\n                    }else{\r\n                    return value === currentGearbox ? \r\n                    <button key={value.gearboxType}>{value.gearboxType}</button>\r\n                    :\r\n                    <button key={value.gearboxType} data-gearbox={value.gearboxType} onClick={changeGearbox} style={{opacity:\"0.4\"}}>{value.gearboxType}</button>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useSelector} from 'react-redux';\r\nimport {Color} from './Color';\r\nimport {Engine} from './Engine';\r\nimport {Gearbox} from './Gearbox';\r\n\r\nexport const CarOptions = () =>{\r\n\r\n    const currentCar = useSelector(state => state.changeCarReducer);\r\n\r\n    return(\r\n        <>\r\n        {currentCar.id !== undefined ? \r\n        <>\r\n            <div className=\"headerContainer\">\r\n                <h2>Customization</h2>\r\n                <h2>{currentCar.carModel.model}</h2>\r\n            </div>\r\n            <Engine currentCar={currentCar}></Engine>\r\n            <Gearbox currentCar={currentCar}></Gearbox>\r\n            <Color currentCar={currentCar}></Color>\r\n        </>\r\n            : \r\n            <div className=\"headerContainer\">\r\n                <h2>Car configuration</h2>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}","import {useSelector} from 'react-redux';\r\nimport {useEffect, useState} from 'react';\r\n\r\nexport const ConfigurationSummary = () => {\r\n\r\n    const currentCar = useSelector(state => state.changeCarReducer);\r\n    const currentEngine = useSelector(state => state.selectCarEngineReducer);\r\n    const currentGearbox = useSelector(state => state.selectCarGearboxReducer);\r\n    const currentColor = useSelector(state => state.selectCarColorReducer);\r\n\r\n    const [price, setPrice] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if(currentCar.id !== undefined){\r\n            setPrice(currentCar.carModel.basePrice + currentEngine.addPrice + currentGearbox.addPrice + currentColor.addPrice);\r\n        }\r\n    },[currentCar, currentEngine, currentGearbox, currentColor]);\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <h4>Engine: {currentEngine.engine}</h4>\r\n            </div>\r\n            <div>\r\n                <h4>Gearbox: {currentGearbox.gearboxType}</h4>\r\n            </div>\r\n            <div>\r\n                <h4>Color: {currentColor.colorName}</h4>\r\n            </div>\r\n            <div>\r\n                <h4>Price: {price.toFixed(2)}$</h4>\r\n            </div>\r\n        </>\r\n    )\r\n}","\r\nimport {CarModelCanvas} from '../carModelCanvas/CarModelCanvas';\r\nimport {ChangeCar} from '../changeCar/ChangeCar';\r\nimport {CarOptions} from '../carOptions/CarOptions';\r\nimport { ConfigurationSummary } from '../configurationSummary/ConfigurationSummary';\r\n\r\nexport const CarCustomizationContainer = () => {\r\n\r\n    return(\r\n        <div className=\"customizationMainContainer\">\r\n            <div className=\"changeCarContainer\">\r\n                <ChangeCar></ChangeCar>\r\n            </div>\r\n            <div className=\"canvas\">\r\n                <CarModelCanvas></CarModelCanvas>\r\n            </div>\r\n            <div className=\"configurationSummary\">\r\n                <ConfigurationSummary></ConfigurationSummary>\r\n            </div>\r\n            <div className=\"optionsContainer\">\r\n                <CarOptions></CarOptions>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {CarCustomizationContainer} from './components/carCustomizationContainer/CarCustomizationContainer';\r\nimport './styles/styles.scss'\r\n\r\nfunction App() {\r\n  return (\r\n    <CarCustomizationContainer/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const selectCarReducer = (state = {}, action) => {\r\n\r\n    const car = action.payload;\r\n    \r\n    switch(action.type){\r\n        case 'SELECTCAR':\r\n\r\n        return state = car;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default selectCarReducer","export const selectCarColorReducer = (state = {}, action) => {\r\n\r\n    const carColor = action.payload;\r\n\r\n    switch(action.type){\r\n        case 'SELECTCARCOLOR':\r\n\r\n        return state = carColor;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default selectCarColorReducer","export const selectCarEngineReducer = (state = {}, action) => {\r\n\r\n    const carEngine = action.payload;\r\n\r\n    switch(action.type){\r\n        case 'SELECTCARENGINE':\r\n\r\n        return state = carEngine;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default selectCarEngineReducer","export const selectCarGearboxReducer = (state = {}, action) => {\r\n\r\n    const carGearbox = action.payload;\r\n\r\n    switch(action.type){\r\n        case 'SELECTCARGEARBOX':\r\n\r\n        return state = carGearbox;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default selectCarGearboxReducer","import changeCarReducer from './changeCar';\r\nimport selectCarColorReducer from './selectCarColor';\r\nimport selectCarEngineReducer from './selectCarEngine';\r\nimport selectCarGearboxReducer from './changeCarGearbox';\r\nimport {combineReducers} from 'redux';\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    changeCarReducer,\r\n    selectCarEngineReducer,\r\n    selectCarGearboxReducer,\r\n    selectCarColorReducer\r\n})\r\n\r\nexport default allReducers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {createStore} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport allReducers from './reducers/index';\r\n\r\nconst store = createStore(allReducers, \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}